"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.tBlindState = void 0;
var flatbuffers = require("flatbuffers");
var e_blind_state_js_1 = require("../../sensact/comm/e-blind-state.js");
var tBlindState = /** @class */ (function () {
    function tBlindState() {
        this.bb = null;
        this.bb_pos = 0;
    }
    tBlindState.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    tBlindState.getRootAstBlindState = function (bb, obj) {
        return (obj || new tBlindState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tBlindState.getSizePrefixedRootAstBlindState = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new tBlindState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tBlindState.prototype.position = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tBlindState.prototype.state = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : e_blind_state_js_1.eBlindState.STOP;
    };
    tBlindState.starttBlindState = function (builder) {
        builder.startObject(2);
    };
    tBlindState.addPosition = function (builder, position) {
        builder.addFieldInt16(0, position, 0);
    };
    tBlindState.addState = function (builder, state) {
        builder.addFieldInt8(1, state, e_blind_state_js_1.eBlindState.STOP);
    };
    tBlindState.endtBlindState = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    tBlindState.createtBlindState = function (builder, position, state) {
        tBlindState.starttBlindState(builder);
        tBlindState.addPosition(builder, position);
        tBlindState.addState(builder, state);
        return tBlindState.endtBlindState(builder);
    };
    return tBlindState;
}());
exports.tBlindState = tBlindState;
