"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.tRgbwPwmState = void 0;
var flatbuffers = require("flatbuffers");
var tRgbwPwmState = /** @class */ (function () {
    function tRgbwPwmState() {
        this.bb = null;
        this.bb_pos = 0;
    }
    tRgbwPwmState.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    tRgbwPwmState.getRootAstRgbwPwmState = function (bb, obj) {
        return (obj || new tRgbwPwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tRgbwPwmState.getSizePrefixedRootAstRgbwPwmState = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new tRgbwPwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tRgbwPwmState.prototype.r = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
    };
    tRgbwPwmState.prototype.g = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
    };
    tRgbwPwmState.prototype.b = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
    };
    tRgbwPwmState.prototype.ww = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    tRgbwPwmState.prototype.cw = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    tRgbwPwmState.prototype.on = function () {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    };
    tRgbwPwmState.starttRgbwPwmState = function (builder) {
        builder.startObject(6);
    };
    tRgbwPwmState.addR = function (builder, r) {
        builder.addFieldInt8(0, r, 0);
    };
    tRgbwPwmState.addG = function (builder, g) {
        builder.addFieldInt8(1, g, 0);
    };
    tRgbwPwmState.addB = function (builder, b) {
        builder.addFieldInt8(2, b, 0);
    };
    tRgbwPwmState.addWw = function (builder, ww) {
        builder.addFieldFloat32(3, ww, 0.0);
    };
    tRgbwPwmState.addCw = function (builder, cw) {
        builder.addFieldFloat32(4, cw, 0.0);
    };
    tRgbwPwmState.addOn = function (builder, on) {
        builder.addFieldInt8(5, +on, +false);
    };
    tRgbwPwmState.endtRgbwPwmState = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    tRgbwPwmState.createtRgbwPwmState = function (builder, r, g, b, ww, cw, on) {
        tRgbwPwmState.starttRgbwPwmState(builder);
        tRgbwPwmState.addR(builder, r);
        tRgbwPwmState.addG(builder, g);
        tRgbwPwmState.addB(builder, b);
        tRgbwPwmState.addWw(builder, ww);
        tRgbwPwmState.addCw(builder, cw);
        tRgbwPwmState.addOn(builder, on);
        return tRgbwPwmState.endtRgbwPwmState(builder);
    };
    return tRgbwPwmState;
}());
exports.tRgbwPwmState = tRgbwPwmState;
