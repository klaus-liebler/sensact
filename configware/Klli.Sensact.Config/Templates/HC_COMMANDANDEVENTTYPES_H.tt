<#@ template language="C#" inherits="CommonFileHeader" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# RenderHeader("CommandAndEventTypes", "autogen", version, "Short", "Details"); #>
#pragma once
#include <inttypes.h>
namespace sensact{
enum struct eCommandType:uint8_t{
	<# foreach(CommandType ct in Enum.GetValues(typeof(CommandType))){ #>
    <#= ct.ToString() #>=<#= (int)ct #> ,
    <# } #>
    CNT
};

enum struct eEventType:uint8_t{
	<# foreach(EventType et in Enum.GetValues(typeof(EventType))){ #>
    <#= et.ToString() #>=<#= (int)et #> ,
    <# } #>
    CNT
};
}