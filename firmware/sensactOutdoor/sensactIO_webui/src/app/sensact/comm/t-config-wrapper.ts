// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { uConfig, unionTouConfig, unionListTouConfig } from '../../sensact/comm/u-config.js';


export class tConfigWrapper {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):tConfigWrapper {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAstConfigWrapper(bb:flatbuffers.ByteBuffer, obj?:tConfigWrapper):tConfigWrapper {
  return (obj || new tConfigWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAstConfigWrapper(bb:flatbuffers.ByteBuffer, obj?:tConfigWrapper):tConfigWrapper {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tConfigWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

configType():uConfig {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : uConfig.NONE;
}

config<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static starttConfigWrapper(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addConfigType(builder:flatbuffers.Builder, configType:uConfig) {
  builder.addFieldInt8(0, configType, uConfig.NONE);
}

static addConfig(builder:flatbuffers.Builder, configOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, configOffset, 0);
}

static endtConfigWrapper(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createtConfigWrapper(builder:flatbuffers.Builder, configType:uConfig, configOffset:flatbuffers.Offset):flatbuffers.Offset {
  tConfigWrapper.starttConfigWrapper(builder);
  tConfigWrapper.addConfigType(builder, configType);
  tConfigWrapper.addConfig(builder, configOffset);
  return tConfigWrapper.endtConfigWrapper(builder);
}
}
