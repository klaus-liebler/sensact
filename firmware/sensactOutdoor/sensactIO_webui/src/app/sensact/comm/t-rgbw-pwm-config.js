"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.tRgbwPwmConfig = void 0;
var flatbuffers = require("flatbuffers");
var tRgbwPwmConfig = /** @class */ (function () {
    function tRgbwPwmConfig() {
        this.bb = null;
        this.bb_pos = 0;
    }
    tRgbwPwmConfig.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    tRgbwPwmConfig.getRootAstRgbwPwmConfig = function (bb, obj) {
        return (obj || new tRgbwPwmConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tRgbwPwmConfig.getSizePrefixedRootAstRgbwPwmConfig = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new tRgbwPwmConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tRgbwPwmConfig.prototype.pwmR = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tRgbwPwmConfig.prototype.pwmG = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tRgbwPwmConfig.prototype.pwmB = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tRgbwPwmConfig.prototype.pwmWw = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tRgbwPwmConfig.prototype.pwmCw = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tRgbwPwmConfig.prototype.idOfStandbyController = function () {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tRgbwPwmConfig.prototype.autoOffMsecs = function () {
        var offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    tRgbwPwmConfig.starttRgbwPwmConfig = function (builder) {
        builder.startObject(7);
    };
    tRgbwPwmConfig.addPwmR = function (builder, pwmR) {
        builder.addFieldInt16(0, pwmR, 0);
    };
    tRgbwPwmConfig.addPwmG = function (builder, pwmG) {
        builder.addFieldInt16(1, pwmG, 0);
    };
    tRgbwPwmConfig.addPwmB = function (builder, pwmB) {
        builder.addFieldInt16(2, pwmB, 0);
    };
    tRgbwPwmConfig.addPwmWw = function (builder, pwmWw) {
        builder.addFieldInt16(3, pwmWw, 0);
    };
    tRgbwPwmConfig.addPwmCw = function (builder, pwmCw) {
        builder.addFieldInt16(4, pwmCw, 0);
    };
    tRgbwPwmConfig.addIdOfStandbyController = function (builder, idOfStandbyController) {
        builder.addFieldInt16(5, idOfStandbyController, 0);
    };
    tRgbwPwmConfig.addAutoOffMsecs = function (builder, autoOffMsecs) {
        builder.addFieldInt32(6, autoOffMsecs, 0);
    };
    tRgbwPwmConfig.endtRgbwPwmConfig = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    tRgbwPwmConfig.createtRgbwPwmConfig = function (builder, pwmR, pwmG, pwmB, pwmWw, pwmCw, idOfStandbyController, autoOffMsecs) {
        tRgbwPwmConfig.starttRgbwPwmConfig(builder);
        tRgbwPwmConfig.addPwmR(builder, pwmR);
        tRgbwPwmConfig.addPwmG(builder, pwmG);
        tRgbwPwmConfig.addPwmB(builder, pwmB);
        tRgbwPwmConfig.addPwmWw(builder, pwmWw);
        tRgbwPwmConfig.addPwmCw(builder, pwmCw);
        tRgbwPwmConfig.addIdOfStandbyController(builder, idOfStandbyController);
        tRgbwPwmConfig.addAutoOffMsecs(builder, autoOffMsecs);
        return tRgbwPwmConfig.endtRgbwPwmConfig(builder);
    };
    return tRgbwPwmConfig;
}());
exports.tRgbwPwmConfig = tRgbwPwmConfig;
