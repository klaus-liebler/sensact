#include "node.hpp"
namespace sensactcore{
	const bool MODEL::TRACE_COMMANDS=true;
	const bool MODEL::TRACE_EVENTS=true;

	static const uint8_t OWID1[6] = {0,0,0,0,0,0};
	static drivers::cDS2482 ds2482(&BSP::i2c2, drivers::eDS2482Device::Dev0);
	static cSensactSENode sensactSE1(OWID1);
	static cDS1820Node ds1820_1(OWID1);
	static cDS2413Node ds2413_1(OWID1);
	//cOwSubbus(drivers::cDS2482 const * const driver, cSensactSENode const  *const sensactSENodes, uint32_t const sensactSENodesCnt,	cDS1820Node const  *const ds1820Nodes, uint32_t const ds1820NodesCnt, cDS2413Node const  * const ds2413Nodes, uint32_t const ds2413NodesCnt);
	static cOwSubbus owSubbus1(&ds2482, &sensactSE1, 1,&ds1820_1, 1, &ds2413_1, 1);

#define RB &BSP::i2c1
#define BB &BSP::i2c2

	static drivers::cPCA9555 BB_9555_00(BB, drivers::ePCA9555Device::Dev0, 0xFFFF);
	static drivers::cPCA9555 BB_9555_01(BB, drivers::ePCA9555Device::Dev1, 0xFFFF);
	static drivers::cPCA9555 BB_9555_02(BB, drivers::ePCA9555Device::Dev2, 0xFFFF);
	static drivers::cPCA9555 BB_9555_03(BB, drivers::ePCA9555Device::Dev3, 0xFFFF);

	#define BB_9555_LEN 4
	static drivers::cPCA9555 * const BB_9555[BB_9555_LEN] = {&BB_9555_00, &BB_9555_01, &BB_9555_02, &BB_9555_03};
	static const uint16_t BB_interruptlines[3]={64+13,64+14,64+15};//E15 ist der erste
	static const cBusmaster buttonBus(
			"Button Bus",
			BB,
			BB_interruptlines,
			BB_9555,
			BB_9555_LEN,
			0,//Bitmask!!!
			0,
			0
			);

	#define RB_9555_LEN 0
	static drivers::cPCA9555 * const RB_9555[BB_9555_LEN] = {};
	static const uint16_t RB_interruptlines[3]={64+10,64+11,64+12};//E15 ist der erste
	static const I2CBusManager relayBus(
			"Relay Bus",
			RB,
			RB_interruptlines,
			RB_9555,
			RB_9555_LEN,
			1+2+4+8,//Bitmask!!!
			0,
			0
			);

	BusManager const * const MODEL::busses[] = {&buttonBus, &relayBus};
}