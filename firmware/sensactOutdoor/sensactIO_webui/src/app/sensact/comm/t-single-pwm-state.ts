// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class tSinglePwmState {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):tSinglePwmState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAstSinglePwmState(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmState):tSinglePwmState {
  return (obj || new tSinglePwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAstSinglePwmState(bb:flatbuffers.ByteBuffer, obj?:tSinglePwmState):tSinglePwmState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tSinglePwmState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

intensity01():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

on():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static starttSinglePwmState(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addIntensity01(builder:flatbuffers.Builder, intensity01:number) {
  builder.addFieldFloat32(0, intensity01, 0.0);
}

static addOn(builder:flatbuffers.Builder, on:boolean) {
  builder.addFieldInt8(1, +on, +false);
}

static endtSinglePwmState(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createtSinglePwmState(builder:flatbuffers.Builder, intensity01:number, on:boolean):flatbuffers.Offset {
  tSinglePwmState.starttSinglePwmState(builder);
  tSinglePwmState.addIntensity01(builder, intensity01);
  tSinglePwmState.addOn(builder, on);
  return tSinglePwmState.endtSinglePwmState(builder);
}
}
