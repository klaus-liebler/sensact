<#@ template language="C#" inherits="CommonFileHeader" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# RenderHeader("Application.h", "autogen", version, "Short", "Details"); #>
#pragma once
#include "common.h"

namespace sensact {

class cApplication {
public:
	const char* Name;
	eAppType AppType;
	eApplicationID Id;

<#=CommandHeaders#>

	virtual bool Setup()=0;
	virtual void DoEachCycle(Time_t time)=0; //Muss vom Master alle 20ms aufgerufen werden
	void OnCommand(eCommandType cmd, uint8_t *payload,
			uint8_t payloadLength, Time_t now);
	virtual void OnEvent(eApplicationID sender, eEventType evt,
			uint8_t *payload, uint8_t payloadLength, Time_t now);
	cApplication(const char* name, const eApplicationID id, const eAppType appType) :
			Name(name), AppType(appType), Id(id) {
	}
	virtual ~cApplication() {
		return;
	}

};
}
