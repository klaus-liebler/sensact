"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.tOnOffCommand = void 0;
var flatbuffers = require("flatbuffers");
var e_on_off_command_js_1 = require("../../sensact/comm/e-on-off-command.js");
var tOnOffCommand = /** @class */ (function () {
    function tOnOffCommand() {
        this.bb = null;
        this.bb_pos = 0;
    }
    tOnOffCommand.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    tOnOffCommand.getRootAstOnOffCommand = function (bb, obj) {
        return (obj || new tOnOffCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tOnOffCommand.getSizePrefixedRootAstOnOffCommand = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new tOnOffCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tOnOffCommand.prototype.cmd = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : e_on_off_command_js_1.eOnOffCommand.ON;
    };
    tOnOffCommand.prototype.msecs = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    tOnOffCommand.starttOnOffCommand = function (builder) {
        builder.startObject(2);
    };
    tOnOffCommand.addCmd = function (builder, cmd) {
        builder.addFieldInt8(0, cmd, e_on_off_command_js_1.eOnOffCommand.ON);
    };
    tOnOffCommand.addMsecs = function (builder, msecs) {
        builder.addFieldInt32(1, msecs, 0);
    };
    tOnOffCommand.endtOnOffCommand = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    tOnOffCommand.createtOnOffCommand = function (builder, cmd, msecs) {
        tOnOffCommand.starttOnOffCommand(builder);
        tOnOffCommand.addCmd(builder, cmd);
        tOnOffCommand.addMsecs(builder, msecs);
        return tOnOffCommand.endtOnOffCommand(builder);
    };
    return tOnOffCommand;
}());
exports.tOnOffCommand = tOnOffCommand;
