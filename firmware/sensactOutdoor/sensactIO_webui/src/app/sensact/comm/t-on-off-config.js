"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.tOnOffConfig = void 0;
var flatbuffers = require("flatbuffers");
var e_on_off_state_js_1 = require("../../sensact/comm/e-on-off-state.js");
var tOnOffConfig = /** @class */ (function () {
    function tOnOffConfig() {
        this.bb = null;
        this.bb_pos = 0;
    }
    tOnOffConfig.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    tOnOffConfig.getRootAstOnOffConfig = function (bb, obj) {
        return (obj || new tOnOffConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tOnOffConfig.getSizePrefixedRootAstOnOffConfig = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new tOnOffConfig()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    tOnOffConfig.prototype.relay = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
    };
    tOnOffConfig.prototype.autoOffMsecs = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    tOnOffConfig.prototype.initialState = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : e_on_off_state_js_1.eOnOffState.MANUAL_OFF;
    };
    tOnOffConfig.starttOnOffConfig = function (builder) {
        builder.startObject(3);
    };
    tOnOffConfig.addRelay = function (builder, relay) {
        builder.addFieldInt16(0, relay, 0);
    };
    tOnOffConfig.addAutoOffMsecs = function (builder, autoOffMsecs) {
        builder.addFieldInt32(1, autoOffMsecs, 0);
    };
    tOnOffConfig.addInitialState = function (builder, initialState) {
        builder.addFieldInt8(2, initialState, e_on_off_state_js_1.eOnOffState.MANUAL_OFF);
    };
    tOnOffConfig.endtOnOffConfig = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    tOnOffConfig.createtOnOffConfig = function (builder, relay, autoOffMsecs, initialState) {
        tOnOffConfig.starttOnOffConfig(builder);
        tOnOffConfig.addRelay(builder, relay);
        tOnOffConfig.addAutoOffMsecs(builder, autoOffMsecs);
        tOnOffConfig.addInitialState(builder, initialState);
        return tOnOffConfig.endtOnOffConfig(builder);
    };
    return tOnOffConfig;
}());
exports.tOnOffConfig = tOnOffConfig;
