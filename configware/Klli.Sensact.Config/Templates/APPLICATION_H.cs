// ------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion: 16.0.0.0
//  
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code neu generiert wird.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Klli.Sensact.Config.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\sensact\configware\Klli.Sensact.Config\Templates\APPLICATION_H.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class APPLICATION_H : CommonFileHeader
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 6 "C:\sensact\configware\Klli.Sensact.Config\Templates\APPLICATION_H.tt"
 RenderHeader("Application.h", "autogen", version, "Short", "Details"); 
            
            #line default
            #line hidden
            this.Write("#pragma once\r\n#include <modules/core/common.h>\r\n#include \"stddef.h\"\r\n#define Name" +
                    " N()\r\nnamespace sensact {\r\n\r\nclass cApplication {\r\npublic:\r\n\teApplicationID Id;\r" +
                    "\n\r\n");
            
            #line 17 "C:\sensact\configware\Klli.Sensact.Config\Templates\APPLICATION_H.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CommandHeaders));
            
            #line default
            #line hidden
            this.Write(@"

	virtual eAppType GetAppType()=0;
	virtual eAppCallResult Setup()=0;
	virtual eAppCallResult DoEachCycle(Time_t time, uint8_t *statusBuffer, size_t *statusBufferLength)=0; //has to be called cyclically
	eAppCallResult OnCommand(eCommandType cmd, const uint8_t * const payload, uint8_t payloadLength, SensactContext *ctx);
	virtual eAppCallResult OnEvent(eApplicationID sender, eEventType evt, const uint8_t * const payload, uint8_t payloadLength, SensactContext *ctx);
	cApplication(const eApplicationID id);
	static char const* NN(eApplicationID appID);
	char const* N();
	static char const* N4I(uint32_t appID);
	virtual ~cApplication() {
		return;
	}
};
}
");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
